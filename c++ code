

//optimal solution

/*
class Solution {
    public:
    
int celebrity(vector<vector<int> >& M, int n) {
        
//take stack     
  stack<int>st;
     
//put all element in stack     
for(int i=0;i<n;i++)st.push(i);
     
// find possible celebrity
while(st.size()!=1){
    
    int a=st.top();
    st.pop();
    int b=st.top();
    st.pop();
    
if(M[a][b]==1 && M[b][a]==1)continue;

else if(M[a][b]==1)st.push(b);

else if(M[b][a]==1)st.push(a);
}
         

// verifiying celebrity

int x=st.top();

// celebrity not know anyone
for(int i=0;i<n;i++)
    if(M[x][i]!=0)return -1;

//everyone know celebrity

for(int j=0;j<n;j++)
    if(x!=j && M[j][x]!=1)return -1;

        
 return x;       
   
}
    
};

*/







//brute force


/*
class Solution {
    public:
   
  
int celebrity(vector<vector<int> >& M, int n) {
 
 
 //check that clebrity no know anyone  
 int a=-1;

 for(int i=0;i<n;i++){
  int f=0;
  for(int j=0;j<n;j++){
    
    if(M[i][j]!=0){
        f=1;
        break;  
        }
  }
  
  if(f==0)a=i;
 } 
 

// check that everone know about celebrity

for(int i=0;i<n;i++){
if(i!=a && M[i][a]!=1)return -1;
}

return a;
}

    
};

*/

